var y=s=>{throw TypeError(s)};var S=(s,t,e)=>t.has(s)||y("Cannot "+e);var r=(s,t,e)=>(S(s,t,"read from private field"),e?e.call(s):t.get(s)),v=(s,t,e)=>t.has(s)?y("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(s):t.set(s,e),l=(s,t,e,n)=>(S(s,t,"write to private field"),n?n.call(s,e):t.set(s,e),e);import{a as w}from"./GIZWWUBJ.js";class b{register(t={}){t.onAppLaunchTriggered&&(this._onAppLaunchTriggered&&overwolf.extensions.onAppLaunchTriggered.removeListener(this._onAppLaunchTriggered),this._onAppLaunchTriggered=e=>{const n=e.origin,i=e.parameter?decodeURIComponent(e.parameter):null;t.onAppLaunchTriggered(n,i)},overwolf.extensions.onAppLaunchTriggered.addListener(this._onAppLaunchTriggered)),t.onAppUpdated&&(this._onAppUpdated&&overwolf.extensions.onExtensionUpdated.removeListener(this._onAppUpdated),this._onAppUpdated=e=>{const n=e.state,i=e.version;t.onAppUpdated(n,i)},overwolf.extensions.onExtensionUpdated.addListener(this._onAppUpdated)),t.onAutoLaunchChanged&&(this._onAutoLaunchChanged&&overwolf.settings.games.onAutoLaunchEnablementChanged.removeListener(this._onAutoLaunchChanged),this._onAutoLaunchChanged=e=>{const n=e.appId,i=e.gameId,a=e.enabled;t.onAutoLaunchChanged(n,i,a)},overwolf.settings.games.onAutoLaunchEnablementChanged.addListener(this._onAutoLaunchChanged)),console.log("[Extension Service] Event listeners are active now.")}unregister(){overwolf.extensions.onAppLaunchTriggered.removeListener(this._onAppLaunchTriggered),overwolf.extensions.onExtensionUpdated.removeListener(this._onAppUpdated),overwolf.settings.games.onAutoLaunchEnablementChanged.removeListener(this._onAutoLaunchChanged),delete this._onAppLaunchTriggered,delete this._onAppUpdated,delete this._onAutoLaunchChanged,console.log("[Extension Service] Event listeners are inactive now.")}static getLaunchSource(){return new URLSearchParams(window.location.search).get("source")||null}static getInstallationParameters(){return new Promise(t=>{overwolf.profile.getCurrentUser(e=>{t(e.installParams)})})}static isAutoLaunchEnabled(t){return new Promise(e=>{overwolf.settings.games.getAutoLaunchEnabled(t,n=>{n.success?e(n.autoLaunchEnabled):e(null)})})}static setAutoLaunchSetting(t,e){return new Promise(n=>{overwolf.settings.games.setAutoLaunchEnabled(t,e,i=>{n(i.success)})})}static isAppInstalled(t){return new Promise(e=>{overwolf.extensions.getRunningState(t,n=>{e(n.success)})})}static getManifest(t=null){return new Promise(e=>{t?overwolf.extensions.getManifest(t,n=>{n.success?e(n):e(null)}):overwolf.extensions.current.getManifest(n=>{n.success?e(n):e(null)})})}static launch(t){overwolf.extensions.launch(t)}static restart(){overwolf.extensions.relaunch()}static setReleaseChannelId(t){return new Promise(e=>{overwolf.settings.setExtensionSettings({channel:t},n=>{e(n.success)})})}static getReleaseChannelId(){return new Promise(t=>{overwolf.settings.getExtensionSettings(e=>{e.success?t(e.settings.channel):t(null)})})}static getEnvironmentId(){return new Promise(t=>{overwolf.profile.getCurrentUser(e=>{t(e.channel)})})}static checkForUpdates(){return new Promise(t=>{overwolf.extensions.checkForExtensionUpdate(e=>{e.success?(console.log(`[Extension Service] Update status: ${e.state}.`),t({status:e.state,version:e.updateVersion||null})):(console.error(`[Extension Service] Failed to check for updates. Reason: "${e.error}".`),t(null))})})}static update(){return new Promise(t=>{overwolf.extensions.updateExtension(e=>{const n=e.success?e.state:e.error,i=e.info;console.log(`[Extension Service] Install an update: ${i}.`),t({status:n,message:i})})})}static isUpdateInstalled(t,e){if(!t||e===t)return!1;const n=t.split(".").map(Number),i=e.split(".").map(Number),a=Math.min(n.length,i.length);for(let o=0;o<a;o++){if(n[o]<i[o])return!0;if(n[o]>i[o])return!1}return!1}static createLogsZip(){return new Promise((t,e)=>{overwolf.utils.createLogsZip(n=>{n.success?t(n.zipPath):t(null)})})}static getPlugin(t){return new Promise(e=>{overwolf.extensions.current.getExtraObject(t,n=>{n.success?e(n.object):e(null)})})}}var d,c;class P{constructor(){v(this,d);v(this,c)}addEventListeners(t){t!=null&&t.onGameInfoChanged&&(r(this,d)&&overwolf.games.onGameInfoUpdated.removeListener(r(this,d)),l(this,d,e=>{if(e.gameInfo)for(const n of e.reason)t.onGameInfoChanged(n,{id:e.gameInfo.classId,name:e.gameInfo.title,isRunning:e.gameInfo.isRunning,isRunningAsAdmin:e.gameInfo.elevated,isInFocus:e.gameInfo.isInFocus,isInFullScreen:e.gameInfo.overlayInfo.isFullscreen,isVideoCaptureAllowed:e.gameInfo.allowsVideoCapture,width:e.gameInfo.width,height:e.gameInfo.height,logicalWidth:e.gameInfo.logicalWidth,logicalHeight:e.gameInfo.logicalHeight,commandLine:e.gameInfo.commandLine,executionPath:e.gameInfo.executionPath,monitorId:e.gameInfo.monitorHandle.value?String(e.gameInfo.monitorHandle.value):null,overlay:{isCursorVisible:e.gameInfo.overlayInfo.isCursorVisible,isExclusiveModeEnabled:!e.gameInfo.overlayInfo.exclusiveModeDisabled,isFullScreenOptimizationEnabled:!e.gameInfo.overlayInfo.isFullScreenOptimizationDisabled,isOutOfProcess:e.gameInfo.overlayInfo.oopOverlay}})}),overwolf.games.onGameInfoUpdated.addListener(r(this,d))),t!=null&&t.onOverlayChanged&&(r(this,c)&&overwolf.settings.games.onOverlayEnablementChanged.removeListener(r(this,c)),l(this,c,e=>{const n=e.gameId,i=e.enabled;t.onOverlayChanged(n,i)}),overwolf.settings.games.onOverlayEnablementChanged.addListener(r(this,c))),console.log("[Game Service] Event listeners are active now.")}removeEventListeners(){overwolf.games.onGameInfoUpdated.removeListener(r(this,d)),overwolf.settings.games.onOverlayEnablementChanged.removeListener(r(this,c)),l(this,d,null),l(this,c,null),console.log("[Game Service] Event listeners are inactive now.")}static getRecentlyPlayedGames(){return new Promise(t=>{overwolf.games.getRecentlyPlayedGames(3,e=>{var n;if(e.success&&((n=e.games)==null?void 0:n.length)>0){const i=e.games.map(a=>Math.floor(a/10));t(i)}else t(null)})})}static getStaticGameInfo(t){return new Promise(e=>{overwolf.games.getGameInfo(t,n=>{n.success?e(n.gameInfo):e(null)})})}static getRunningGameInfo(){return new Promise(t=>{overwolf.games.getRunningGameInfo2(e=>{e.success&&e.gameInfo?t({id:e.gameInfo.classId,name:e.gameInfo.title,isRunning:e.gameInfo.isRunning,isRunningAsAdmin:e.gameInfo.elevated,isInFocus:e.gameInfo.isInFocus,isInFullScreen:e.gameInfo.overlayInfo.isFullscreen,isVideoCaptureAllowed:e.gameInfo.allowsVideoCapture,width:e.gameInfo.width,height:e.gameInfo.height,logicalWidth:e.gameInfo.logicalWidth,logicalHeight:e.gameInfo.logicalHeight,commandLine:e.gameInfo.commandLine,executionPath:e.gameInfo.executionPath,monitorId:e.gameInfo.monitorHandle.value?String(e.gameInfo.monitorHandle.value):null,overlay:{isCursorVisible:e.gameInfo.overlayInfo.isCursorVisible,isExclusiveModeEnabled:!e.gameInfo.overlayInfo.exclusiveModeDisabled,isFullScreenOptimizationEnabled:!e.gameInfo.overlayInfo.isFullScreenOptimizationDisabled,isOutOfProcess:e.gameInfo.overlayInfo.oopOverlay}}):t(null)})})}static isGameRunning(t,e=null){return t?t.isRunning&&(e?t.id===e:!0):!1}static isGameInFocus(t,e=null){return t?t.isInFocus&&(e?t.id===e:!0):!1}static isGameInFullScreen(t,e=null){return t?t.isInFullScreen&&(!e||t.id===e):!1}static enableOverlay(t){return new Promise(e=>{overwolf.settings.games.enableOverlay(t,n=>{e(n.success)})})}static isOverlayEnabled(t){return new Promise(e=>{overwolf.settings.games.getOverlayEnabled(t,n=>{n.success?e(n.enabled):e(null)})})}}d=new WeakMap,c=new WeakMap;var g,u,h;class F{constructor(){v(this,g);v(this,u);v(this,h)}addEventListeners(t){t!=null&&t.onHotkeyChanged&&(r(this,g)&&overwolf.settings.hotkeys.onChanged.removeListener(r(this,g)),l(this,g,e=>{const n=e.name,i=e.gameId,a=e.binding==="Unassigned"?null:e.binding.replace("RightBackSlash","\\");t.onHotkeyChanged(n,i,a)}),overwolf.settings.hotkeys.onChanged.addListener(r(this,g))),t!=null&&t.onHotkeyPressed&&(r(this,u)&&overwolf.settings.hotkeys.onPressed.removeListener(r(this,u)),l(this,u,e=>{const n=e.name;t.onHotkeyPressed(n)}),overwolf.settings.hotkeys.onPressed.addListener(r(this,u))),t!=null&&t.onHotkeyHold&&(r(this,h)&&overwolf.settings.hotkeys.onHold.removeListener(r(this,h)),l(this,h,e=>{const n=e.name,i=e.state;t.onHotkeyHold(n,i)}),overwolf.settings.hotkeys.onHold.addListener(r(this,h))),console.log("[Hotkey Service] Event listeners are active now.")}removeEventListeners(){overwolf.settings.hotkeys.onChanged.removeListener(r(this,g)),overwolf.settings.hotkeys.onPressed.removeListener(r(this,u)),overwolf.settings.hotkeys.onHold.removeListener(r(this,h)),l(this,g,null),l(this,u,null),l(this,h,null),console.log("[Hotkey Service] Event listeners are inactive now.")}static getHotkeys(){return new Promise(t=>{overwolf.settings.hotkeys.get(e=>{if(e.success){const n=[];for(const i in e.games)for(const a of e.games[i])n.push({id:a.name,description:a.title,binding:a.IsUnassigned?null:a.binding.replace("RightBackSlash","\\"),isHold:a.hold,isPassthrough:a.isPassthrough,gameId:Number(i)});for(const i of e.globals)n.push({id:i.name,description:i.title,binding:i.IsUnassigned?null:i.binding.replace("RightBackSlash","\\"),isHold:i.hold,isPassthrough:i.isPassthrough,gameId:null});t(n)}else t(null)})})}static assignHotkey(t,e,n,i=null){return new Promise(a=>{overwolf.settings.hotkeys.assign({name:t,gameId:e,virtualKey:n,modifiers:i},o=>{o.success||console.error(`[Hotkey Service] Failed to assign a hotkey. Reason: "${o.error}".`),a(o.success)})})}static unassignHotkey(t,e=null){return new Promise(n=>{overwolf.settings.hotkeys.unassign({name:t,gameId:e},i=>{i.success||console.error(`[Hotkey Service] Failed to unassign a hotkey. Reason: "${i.error}".`),n(i.success)})})}}g=new WeakMap,u=new WeakMap,h=new WeakMap;class C{register(t={}){t.onHighlightsCaptured&&(this._onHighlightsCaptured&&overwolf.media.replays.onHighlightsCaptured.removeListener(this._onHighlightsCaptured),this._onHighlightsCaptured=e=>{t.onHighlightsCaptured({gameId:e.game_id,matchId:e.match_id,sessionId:e.session_id,timestamp:e.start_time,duration:e.duration,events:e.raw_events.map(n=>({type:n.type,time:n.time})),thumbnail:{path:e.thumbnail_encoded_path.replace(/ /g,"%20"),url:e.thumbnail_url},media:{path:e.media_path_encoded.replace(/ /g,"%20"),url:e.media_url}})},overwolf.media.replays.onHighlightsCaptured.addListener(this._onHighlightsCaptured)),console.log("[Overwolf | Media Service] Event listeners have been enabled")}unregister(){overwolf.media.replays.onHighlightsCaptured.removeListener(this._onHighlightsCaptured),delete this._onHighlightsCaptured,console.log("[Overwolf | Media Service] Event listeners have been disabled")}static turnOn(t=["*"],e=10){return new Promise(n=>{overwolf.media.replays.turnOn({settings:{video:{buffer_length:4e4},quota:{max_quota_gb:e}},highlights:{enable:!0,requiredHighlights:t}},i=>{i.success?(console.log("[Overwolf | Media Service] The highlights capture is enabled now"),n(!0)):(console.error(`[Overwolf | Media Service] Failed to enable the highlights capture: ${JSON.stringify(i,null,"	")}`),n(!1))})})}static turnOff(){return new Promise(t=>{overwolf.media.replays.turnOff(e=>{e.success?(console.log("[Overwolf | Media Service] The highlights capture is disabled now"),t(!0)):(console.error(`[Overwolf | Media Service] Failed to disable the highlights capture: ${JSON.stringify(e,null,"	")}`),t(!1))})})}static getSupportedFeatures(t){return new Promise(e=>{overwolf.media.replays.getHighlightsFeatures(t,n=>{n.success?e(n.features):e(null)})})}static isHighlightsCaptureEnabled(){return new Promise(t=>{overwolf.media.replays.getState(e=>{e.success?t(e.isOn):t(null)})})}static getMediaFolderSize(){return new Promise(t=>{overwolf.media.videos.getVideosSize(e=>{e.success?t(e.totalSizeGbs):t(null)})})}static openInFolder(t){return new Promise(e=>{overwolf.utils.openWindowsExplorer(t,n=>{e(n.success)})})}static deleteHighlight(t){return new Promise(e=>{overwolf.media.videos.deleteVideo(t,n=>{e(n.success)})})}static deleteAllHighlights(){return new Promise(t=>{overwolf.media.videos.deleteOldVideos(0,e=>{t(e.success)})})}}class H{static get paths(){return overwolf.io.paths}static fileExists(t){return new Promise((e,n)=>{overwolf.io.fileExists(t,i=>{i.success?e(i.found):n(new Error(`[File System Service] Failed to check whether a file exists. Reason: "${i.error}".`))})})}static getDirectoryContent(t){return new Promise((e,n)=>{overwolf.io.dir(t,i=>{i.success?e(i.data):n(new Error(`[File System Service] Failed to get the list of files and folders in a directory. Reason: "${i.error}".`))})})}static readFileContents(t,e=overwolf.io.enums.eEncoding.UTF8){return new Promise((n,i)=>{overwolf.io.readTextFile(t,{encoding:e},a=>{a.success?n(a.content):i(new Error(`[File System Service] Failed to get the contents of a text file. Reason: "${a.error}".`))})})}static writeFileContents(t,e,n=overwolf.io.enums.eEncoding.UTF8){return new Promise((i,a)=>{overwolf.io.writeFileContents(t,e,n,!0,o=>{o.success?i():a(new Error(`[File System Service] Failed to write the contents to a text file. Reason: "${o.error}".`))})})}static addFileListener(t,e,n,i=!1,a=overwolf.io.enums.eEncoding.UTF8){overwolf.io.listenOnFile(t,e,{skipToEnd:i,encoding:a},o=>{if(o.success){const f=o.content,m=o.info?JSON.parse(o.info):null;n(f,m)}else throw new Error(`[File System Service] Failed to add a file listener. Reason: "${o.error}".`)})}static removeFileListener(t){overwolf.io.stopFileListener(t)}static delete(t,e){return new Promise((n,i)=>{overwolf.extensions.io.delete(t,e,a=>{a.success?n():i(new Error(`[File System Service] Failed to delete file. Reason: "${a.error}".`))})})}static watchFile(t,e){overwolf.io.watchFile(t,n=>{if(n.success)n.eventType===overwolf.io.enums.WatchEventType.Registered?console.warn(`[File System Service] Started watching a file: ${t}.`):n.eventType===overwolf.io.enums.WatchEventType.Changed&&console.warn(`[File System Service] A file has been changed: ${t}.`),e(n.eventType,t,n.newPath);else throw new Error(`[File System Service] Failed to start watching a file. Reason: "${n.error}".`)})}static stopWatchFile(t,e=null){overwolf.io.stopWatchingFile(t,n=>{if(n.success)console.warn(`[File System Service] Stopped watching a file: ${t}.`),e&&e(n);else throw new Error(`[File System Service] Failed to stop watch a file. Reason: "${n.error}".`)})}}class p{static _connect(){return new Promise(t=>{const e=indexedDB.open("media",1);e.onupgradeneeded=function(n){const i=n.target.result;if(n.oldVersion<1){const a=i.createObjectStore("highlights",{keyPath:"id",autoIncrement:!0});a.createIndex("id","id",{unique:!0}),a.createIndex("matchId","matchId",{unique:!1}),a.createIndex("sessionId","sessionId",{unique:!1}),a.createIndex("version","version",{unique:!1})}},e.onerror=function(n){w.notify(new Error(n.target.error)),t(null)},e.onsuccess=function(n){t(n.target.result)}})}static addHighlight(t,e,n="highlights"){return new Promise(async i=>{const a=await this._connect();if(!a)return i(!1);let o=a.transaction([n],"readwrite");o.objectStore(n).add({...t,...e,version:1}),o.onerror=function(m){w.notify(new Error(m.target.error)),i(!1)},o.oncomplete=function(){i(!0)}})}static deleteHighlight(t,e="highlights"){return new Promise(async n=>{const i=await this._connect();if(!i)return n(!1);let a=i.transaction([e],"readwrite");a.objectStore(e).delete(t),a.onerror=function(f){w.notify(new Error(f.target.error)),n(!1)},a.oncomplete=function(){n(!0)}})}static getHighlights(t="highlights"){return new Promise(async e=>{const n=await this._connect();if(!n)return e(!1);let i=[],f=n.transaction([t],"readonly").objectStore(t).openCursor(null,"prev");f.onerror=function(m){w.notify(new Error(m.target.error)),e(!1)},f.onsuccess=function(m){let I=m.target.result;if(I){let _=I.value;i.push(_),i.length>=999?e(i):I.continue()}else e(i)}})}static async runHighlightsStorageCleanup(t){for(let e of t){let n=e.media.path.replace("file:///","").replaceAll("%20"," ");try{await H.fileExists(n)||(console.log(`[Media Storage] The highlight does not exist anymore: ${JSON.stringify(e)}.`),await this.deleteHighlight(e.id))}catch(i){console.error(i)}}}}const x=[{id:"bulldog",internalId:"TX_Hud_Burst",name:"Bulldog",categoryId:"ar"},{id:"guardian",internalId:"tx_hud_dmr",name:"Guardian",categoryId:"ar"},{id:"vandal",internalId:"TX_Hud_Volcano",name:"Vandal",categoryId:"ar"},{id:"phantom",internalId:"TX_Hud_Assault_AR10A2_S",name:"Phantom",categoryId:"ar"},{id:"marshal",internalId:"TX_Hud_Sniper_BoltAction_S",name:"Marshal",categoryId:"sr"},{id:"operator",internalId:"TX_Hud_Operator",name:"Operator",categoryId:"sr"},{id:"outlaw",internalId:"TX_Hud_DoubleSniper",name:"Outlaw",categoryId:"sr"},{id:"stinger",internalId:"TX_Hud_Vector",name:"Stinger",categoryId:"smg"},{id:"spectre",internalId:"TX_Hud_SMG_MP5_S",name:"Spectre",categoryId:"smg"},{id:"judge",internalId:"TX_Hud_Shotguns_Spas12_S",name:"Judge",categoryId:"shotgun"},{id:"bucky",internalId:"TX_Hud_Pump",name:"Bucky",categoryId:"shotgun"},{id:"ares",internalId:"TX_Hud_LMG",name:"Ares",categoryId:"heavy"},{id:"odin",internalId:"TX_Hud_HMG",name:"Odin",categoryId:"heavy"},{id:"ghost",internalId:"TX_Hud_Pistol_Luger_S",name:"Ghost",categoryId:"sidearm"},{id:"classic",internalId:"TX_Hud_Pistol_Glock_S",name:"Classic",categoryId:"sidearm"},{id:"frenzy",internalId:"TX_Hud_AutoPistol",name:"Frenzy",categoryId:"sidearm"},{id:"golden-gun",internalId:"TX_Hud_Pistol_GoldenGun_S",name:"Golden Gun",categoryId:"sidearm"},{id:"sheriff",internalId:"TX_Hud_Pistol_Revolver_S",name:"Sheriff",categoryId:"sidearm"},{id:"shorty",internalId:"TX_Hud_Pistol_SawedOff_S",name:"Shorty",categoryId:"sidearm"},{id:"snowball-launcher",internalId:"TX_SnowballLauncher",name:"Snowball Launcher",categoryId:"sidearm"},{id:"melee",internalId:"TX_Hud_Knife_Standard_S",name:"Tactical Knife",categoryId:"melee"}];export{b as E,H as F,P as G,F as H,C as M,x as W,p as a};
